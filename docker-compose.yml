services:
    backend:
        build: ./backend
        ports:
            - "8000:8000"
        volumes:
            - ./backend/app:/app/app
        env_file:
            - .env
        environment:
            - APP_ENV=development
        depends_on:
            db:
                condition: service_healthy
        networks:
            - app-network

    frontend:
        build: ./frontend
        ports:
            - "80:80"
        depends_on:
            - backend
        networks:
            - app-network

    db:
        image: postgres:13
        ports:
            - "5433:5432"
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5
        networks:
            - app-network

volumes:
    postgres_data:

networks:
    app-network:
        driver: bridge
